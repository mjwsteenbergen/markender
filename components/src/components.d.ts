/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  BibtexEntry,
} from './components/md-bib/bibtexParse';
import {
  Link,
  LinkSubscriber,
} from './components/md-link/md-link-files';

export namespace Components {
  interface MdBib {
    'format': string;
    'src': string;
  }
  interface MdBibItem {
    'bibitem': BibtexEntry;
    'name': string;
  }
  interface MdCover {
    'author': string;
    'date': string;
    'title': string;
  }
  interface MdImg {
    'align': string;
    'alt': string;
    'id_2': string;
    'name': string;
    'rank': number;
    'src': string;
  }
  interface MdLink {
    'link': string;
    'name': string;
    'rank': number;
  }
  interface MdLinkStorage {
    'subscribe': (id: string, element: LinkSubscriber) => Promise<void>;
    'update': (id: string, link: Link) => Promise<void>;
    'updateLinkSubscribers': (id: string, link: Link) => Promise<void>;
  }
  interface MdStyle {
    'margin': string;
    'name': string;
    'url': string;
  }
  interface MdToc {
    'chapters': boolean;
  }
  interface MdTocItem {
    'chapter': string;
    'indent': string;
    'name': string;
  }
}

declare global {


  interface HTMLMdBibElement extends Components.MdBib, HTMLStencilElement {}
  var HTMLMdBibElement: {
    prototype: HTMLMdBibElement;
    new (): HTMLMdBibElement;
  };

  interface HTMLMdBibItemElement extends Components.MdBibItem, HTMLStencilElement {}
  var HTMLMdBibItemElement: {
    prototype: HTMLMdBibItemElement;
    new (): HTMLMdBibItemElement;
  };

  interface HTMLMdCoverElement extends Components.MdCover, HTMLStencilElement {}
  var HTMLMdCoverElement: {
    prototype: HTMLMdCoverElement;
    new (): HTMLMdCoverElement;
  };

  interface HTMLMdImgElement extends Components.MdImg, HTMLStencilElement {}
  var HTMLMdImgElement: {
    prototype: HTMLMdImgElement;
    new (): HTMLMdImgElement;
  };

  interface HTMLMdLinkElement extends Components.MdLink, HTMLStencilElement {}
  var HTMLMdLinkElement: {
    prototype: HTMLMdLinkElement;
    new (): HTMLMdLinkElement;
  };

  interface HTMLMdLinkStorageElement extends Components.MdLinkStorage, HTMLStencilElement {}
  var HTMLMdLinkStorageElement: {
    prototype: HTMLMdLinkStorageElement;
    new (): HTMLMdLinkStorageElement;
  };

  interface HTMLMdStyleElement extends Components.MdStyle, HTMLStencilElement {}
  var HTMLMdStyleElement: {
    prototype: HTMLMdStyleElement;
    new (): HTMLMdStyleElement;
  };

  interface HTMLMdTocElement extends Components.MdToc, HTMLStencilElement {}
  var HTMLMdTocElement: {
    prototype: HTMLMdTocElement;
    new (): HTMLMdTocElement;
  };

  interface HTMLMdTocItemElement extends Components.MdTocItem, HTMLStencilElement {}
  var HTMLMdTocItemElement: {
    prototype: HTMLMdTocItemElement;
    new (): HTMLMdTocItemElement;
  };
  interface HTMLElementTagNameMap {
    'md-bib': HTMLMdBibElement;
    'md-bib-item': HTMLMdBibItemElement;
    'md-cover': HTMLMdCoverElement;
    'md-img': HTMLMdImgElement;
    'md-link': HTMLMdLinkElement;
    'md-link-storage': HTMLMdLinkStorageElement;
    'md-style': HTMLMdStyleElement;
    'md-toc': HTMLMdTocElement;
    'md-toc-item': HTMLMdTocItemElement;
  }
}

declare namespace LocalJSX {
  interface MdBib {
    'format'?: string;
    'src'?: string;
  }
  interface MdBibItem {
    'bibitem'?: BibtexEntry;
    'name'?: string;
  }
  interface MdCover {
    'author'?: string;
    'date'?: string;
    'title'?: string;
  }
  interface MdImg {
    'align'?: string;
    'alt'?: string;
    'id_2'?: string;
    'name'?: string;
    'rank'?: number;
    'src'?: string;
  }
  interface MdLink {
    'link'?: string;
    'name'?: string;
    'rank'?: number;
  }
  interface MdLinkStorage {}
  interface MdStyle {
    'margin'?: string;
    'name'?: string;
    'url'?: string;
  }
  interface MdToc {
    'chapters'?: boolean;
  }
  interface MdTocItem {
    'chapter'?: string;
    'indent'?: string;
    'name'?: string;
  }

  interface IntrinsicElements {
    'md-bib': MdBib;
    'md-bib-item': MdBibItem;
    'md-cover': MdCover;
    'md-img': MdImg;
    'md-link': MdLink;
    'md-link-storage': MdLinkStorage;
    'md-style': MdStyle;
    'md-toc': MdToc;
    'md-toc-item': MdTocItem;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'md-bib': LocalJSX.MdBib & JSXBase.HTMLAttributes<HTMLMdBibElement>;
      'md-bib-item': LocalJSX.MdBibItem & JSXBase.HTMLAttributes<HTMLMdBibItemElement>;
      'md-cover': LocalJSX.MdCover & JSXBase.HTMLAttributes<HTMLMdCoverElement>;
      'md-img': LocalJSX.MdImg & JSXBase.HTMLAttributes<HTMLMdImgElement>;
      'md-link': LocalJSX.MdLink & JSXBase.HTMLAttributes<HTMLMdLinkElement>;
      'md-link-storage': LocalJSX.MdLinkStorage & JSXBase.HTMLAttributes<HTMLMdLinkStorageElement>;
      'md-style': LocalJSX.MdStyle & JSXBase.HTMLAttributes<HTMLMdStyleElement>;
      'md-toc': LocalJSX.MdToc & JSXBase.HTMLAttributes<HTMLMdTocElement>;
      'md-toc-item': LocalJSX.MdTocItem & JSXBase.HTMLAttributes<HTMLMdTocItemElement>;
    }
  }
}


